#!/bin/zsh

##########################################
##░█░█░█▀█░█▀▀░█░█░▀█▀░█░█░█▀█░▀░█▀▀░░░░##
##░█▀█░█░█░▀▀█░█▀█░░█░░░█░░█▀█░░░▀▀█░░░░##
##░▀░▀░▀▀▀░▀▀▀░▀░▀░▀▀▀░░▀░░▀░▀░░░▀▀▀░░░░##
##░▀▀█░█▀▀░█░█░░░█▀▀░█▀█░█▀█░█▀▀░▀█▀░█▀▀##
##░▄▀░░▀▀█░█▀█░░░█░░░█░█░█░█░█▀▀░░█░░█░█##
##░▀▀▀░▀▀▀░▀░▀░░░▀▀▀░▀▀▀░▀░▀░▀░░░▀▀▀░▀▀▀##
##########################################



##################
# Minor Settings #
##################
bindkey -v
export KEYTIMEOUT=1
export EDITOR="nvim"
# Load aliases and shortcuts if existent.
source ~/.config/shell/aliasrc



################
##            ##
##   Prompt   ##
##            ##
################
autoload -U colors && colors	# Load colors
setopt autocd		# Automatically cd into typed directory.
stty stop undef		# Disable ctrl-s to freeze terminal.
setopt interactive_comments

precmd() { print "" }
symbol="❯"
PROMPT="%B%F{cyan}%1~%f %F{#bbff33}❯%f%b "

# Git Right Side Prompt:
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
RPROMPT=\$vcs_info_msg_0_
zstyle ':vcs_info:git:*' formats ' %B%F{magenta} %F{yellow}%b%f'
zstyle ':vcs_info:*' enable git

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}

zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.



#################
##             ##
##   History   ##
##             ##
#################
# History in cache directory:
HISTSIZE=10000000
SAVEHIST=9999999
HISTFILE=~/.cache/zsh/history
setopt appendhistory
setopt SHARE_HISTORY
setopt histignorealldups


####################
##                ##
##   Completion   ##
##                ##
####################
# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.
# case insesetive match
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'



##################
##              ##
##   Bindings   ##
##              ##
##################
#Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Ranger does cd when exit
function rcd {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )
    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}

# Opens Ranger with rcd
bindkey -s '^o' 'rcd\n'
# Opens bc
bindkey -s '^a' 'bc -lq\n'
# Opens fzf with cd capability
bindkey -s '^f' 'cd "$(dirname "$(fzf)")"\n'
bindkey -s '^g' 'lazygit\n'

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

# ctrl modements
bindkey '^[[1;5D' backward-word 
bindkey '^[[1;5C' forward-word

# Ctrl + Backspace
backward-kill-dir () {
    local WORDCHARS=${WORDCHARS/\/}
    zle backward-kill-word
    zle -f kill
}
zle -N backward-kill-dir

bindkey '^H' backward-kill-dir



################
#              #
#   Plugins    #
#              #
################
# syntax highlightung for zsh
source ~/.config/plugins/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# syntax autosuggestions for zsh
source ~/.config/plugins/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#696969"
# Fzf History
source ~/.config/plugins/zsh/zsh-fzf-history-search/zsh-fzf-history-search.zsh


